using System;
using UnityEngine;

public class AttackSpawner : UnityEngine.Object
{
	private static Type[] attackIndex = new Type[130]
	{
		typeof(TestRandomPelletAttack),
		typeof(SOULTestAttack),
		typeof(ShieldAttackTest),
		typeof(FloweyFirstAttack),
		typeof(FroggitFlyAttack),
		typeof(FroggitFrogAttack),
		typeof(MultiFroggitAttack),
		typeof(ButterflySpinAttack),
		typeof(ButterflyFallAttack),
		typeof(FroggitWhimsunAttack),
		typeof(MoldsmalAttack),
		typeof(NapstablookStreamAttack),
		typeof(NapstablookNopeAttack),
		typeof(NapstablookFinalAttack),
		typeof(NapstablookTearAttack),
		typeof(LooxWormAttack),
		typeof(LooxBounceAttack),
		typeof(VegCarrotAttack),
		typeof(VegBounceAttack),
		typeof(MultiLooxAttack),
		typeof(MultiVegAttack),
		typeof(VegLooxAttack),
		typeof(FloweyBossIntroAttack),
		typeof(SimplePelletAttack),
		typeof(PelletLinesAttack),
		typeof(FloweyVineAttackSimple),
		typeof(PelletVineAttack),
		typeof(DoubleVineAttack),
		typeof(FloweyBiteAttack),
		typeof(FloweyBiteAttackHarder),
		typeof(FloweyDeath),
		typeof(FloweyFinalAttack),
		typeof(PeacefulRestStandardAttack),
		typeof(SpinRoboSpinAttack),
		typeof(CoilSnakeFroggitAttack),
		typeof(PaintbrushAttack),
		typeof(PaintBlobAttack),
		typeof(CarpainterIntroAttack),
		typeof(CarPaintbrushAttack),
		typeof(CarPaintBlobAttack),
		typeof(TorielIntroAttack),
		typeof(TorielTallSwayAttack),
		typeof(TorielSwayAttack),
		typeof(TorielHandAttack),
		typeof(TorielDualHandAttack),
		typeof(TorielFlameSpamAttack),
		typeof(TorielFightEndAttack),
		typeof(FinalFrogAndWhimsalotAttacks),
		typeof(AstigVegeAttacks),
		typeof(FloweySpikeAttack),
		typeof(KnightSwing),
		typeof(BladeKnightBlasters),
		typeof(CarpainterDeath),
		typeof(CaveAttacks),
		typeof(BigMoleAttack),
		typeof(BigWhackAMoleAttack),
		typeof(MoleClawAttack),
		typeof(SlowModeAttack),
		typeof(PorkyLegAttack),
		typeof(PorkyGasAttack),
		typeof(PorkyShooterAttack),
		typeof(PorkyHelicopterAttack),
		typeof(PorkyFinalAttack),
		typeof(PorkyDeath),
		typeof(TwoHeliAttack),
		typeof(PorkyTwoShooterAttack),
		typeof(PorkyHeliShooterAttack),
		typeof(NessPhase1Attacks),
		typeof(NessDeathAttack),
		typeof(PaulaMeleeAttack),
		typeof(PaulaFireAttack),
		typeof(PaulaIceAttack),
		typeof(PaulaFireballAttack),
		typeof(PaulaLightningAttack),
		typeof(PaulaStarstormAttack),
		typeof(PaulaRandomPatternsAttack),
		typeof(PaulaDeathAttack),
		typeof(MondoMoleDeath),
		typeof(DummyLeavingAttack),
		typeof(DummyNothingAttack),
		typeof(SnowdinStandardAttack),
		typeof(DoggoAttack),
		typeof(JerryFinisherAttack),
		typeof(FeraldrakeAttack),
		typeof(FeraldrakeEndAttack),
		typeof(DogiAttack),
		typeof(GyftrotAttack),
		typeof(LesserDogAttacks),
		typeof(PlatformingTest),
		typeof(GlydeAttack),
		typeof(JerryRedSwingBase),
		typeof(JerryFirstRed),
		typeof(JerryYellowAttack),
		typeof(JerrySecondRed),
		typeof(JerrySecondYellow),
		typeof(JerryFirstBlue),
		typeof(JerryBlueSpinAttack),
		typeof(JerryThirdRed),
		typeof(JerryFourthRed),
		typeof(JerryThirdYellow),
		typeof(JerrySecondBlue),
		typeof(JerrySecondBlueSpinAttack),
		typeof(JerryFifthRed),
		typeof(JerryFourthYellow),
		typeof(JerrySixthRed),
		typeof(SusieLDAttack),
		typeof(SusieLDEnd),
		typeof(GreaterDogAttacks),
		typeof(SansIntroAttack),
		typeof(BoneHoppingAttack1),
		typeof(BasicBlueHopSlamAttack),
		typeof(PlatformChallenge1),
		typeof(SansClimbChallenge1),
		typeof(TallBlasterPlatforms),
		typeof(FallingChallenge1),
		typeof(UpsideDownAlternateAttack),
		typeof(SansClimbChallenge2),
		typeof(TallBlasterPlatformsHard),
		typeof(GiantColorBlasterAttack),
		typeof(FallingChallengeAttack2),
		typeof(SansFinalAttack),
		typeof(SansSpareAttack),
		typeof(SansDeathAttack),
		typeof(SansIceDeathAttack),
		typeof(SansSpareAbortAttack),
		typeof(BlastDashAttack),
		typeof(BlastDashEasyAttack),
		typeof(BlastDashHardAttack),
		typeof(BoneRowsAttack),
		typeof(SansRealSpareAttack)
	};

	public static AttackBase GetAttack(int index)
	{
		if (index > -1 && index < attackIndex.Length)
		{
			return new GameObject(attackIndex[index].Name, attackIndex[index]).GetComponent<AttackBase>();
		}
		return new GameObject("BlankAttack", typeof(AttackBase)).GetComponent<AttackBase>();
	}
}

